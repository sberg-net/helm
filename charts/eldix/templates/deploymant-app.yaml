apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.appName }}-app"
  labels:
    app.kubernetes.io/name: {{ .Values.appName }}
    helm.sh/chart: {{ include "eldix.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ .Values.appName }}-app"
  template:
    metadata:
      labels:
        app: "{{ .Values.appName }}-app"
    spec:
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser | default 1027 }}
        runAsGroup: {{ .Values.securityContext.runAsGroup | default 1027 }}
        fsGroup: {{ .Values.securityContext.fsGroup | default 1027 }}
      nodeSelector:
        kubernetes.io/arch: {{ .Values.appContainer.arch  }}
      containers:
      - env:
        {{- range $name,$value := .Values.appContainer.env }}
        - name: {{ $name }}
          value: {{ $value | quote }}
        {{- end }}
        image: "{{ .Values.privateRegistry.name }}/ti/eldix4kim/eldix4kim-springboot:{{ .Values.appContainer.version | default .Chart.AppVersion }}"
        name: {{ .Values.appName }}
        {{ if .Values.persistence.enabled -}}
        volumeMounts:
          - mountPath: /eldix/logs
            name: eldix-data
            subPath: "{{ .Values.persistence.subPath }}/app/logs"
          - mountPath: /eldix/data
            name: eldix-data
            subPath: "{{ .Values.persistence.subPath }}/app/data"
          {{- end }}
        imagePullPolicy: {{ .Values.appContainer.imagePullPolicy }}
        resources:
          limits:
            cpu: {{ .Values.appContainer.resources.limits.cpu }}
            memory: {{ .Values.appContainer.resources.limits.memory }}
          requests:
            cpu: {{ .Values.appContainer.resources.requests.cpu }}
            memory: {{ .Values.appContainer.resources.requests.memory }}
      imagePullSecrets:
      - name: {{ .Values.privateRegistry.imagePullSecret.name }}
      restartPolicy: Always
      {{ if .Values.persistence.enabled -}}
      volumes:
        - name: eldix-data
          persistentVolumeClaim:
            {{- if ( .Values.persistence.useExistingPVC ) }}
            claimName: {{ .Values.persistence.useExistingPVC }}
            {{- else}}
            claimName: eldix
            {{- end}}
      {{- end }}


